const P1: u16 = 0xff00; // register for reading joy pad info and determining system type (R/W)
const SB: u16 = 0xff01; // serial transfer data (R/W)
const SC: u16 = 0xff02; // S10 control (R/W)
const DIV: u16 = 0xff04; // divider register (R/W)
const TIMA: u16 = 0xff05; // timer counter (R/W)
const TMA: u16 = 0xff06; // timer modulo (R/W)
const TAC: u16 = 0xff07; // timer controller (R/W)
const IF: u16 = 0xff0f; // interrupt flag (R/W)
const NR_10: u16 = 0xff10; // sound mode 1 register, sweep register (R/W)
const NR_11: u16 = 0xff11; // sound mode 1 register, sound length / wave pattern duty (R/W)
const NR_12: u16 = 0xff12; // sound mode 1 register, envelope (R/W)
const NR_13: u16 = 0xff13; // sound mode 1 register, frequency lo (W)
const NR_14: u16 = 0xff14; // sound mode 1 register, frequency hi (R/W)
const NR_21: u16 = 0xff16; // sound mode 2 register, sound length / wave pattern duty (R/W)
const NR_22: u16 = 0xff17; // sound mode 2 register, envelope (R/W)
const NR_23: u16 = 0xff18; // sound mode 2 register, frequency lo data (W)
const NR_24: u16 = 0xff19; // sound mode 2 register, frequency hi data (R/W)
const NR_30: u16 = 0xff1a; // sound mode 3 register, sound on / off (R/W)
const NR_31: u16 = 0xff1b; // sound mode 3 register, sound length (R/W)
const NR_32: u16 = 0xff1c; // sound mode 3 register, select output level (R/W)
const NR_33: u16 = 0xff1d; // sound mode 3 register, frequency's lower data (W)
const NR_34: u16 = 0xff1d; // sound mode 3 register, frequency's higher data (R/W)
const NR_41: u16 = 0xff20; // sound mode 4 register, sound length (R/W)
const NR_42: u16 = 0xff21; // sound mode 4 register, envelope (R/W)
const NR_43: u16 = 0xff22; // sound mode 4 register, polynomial counter (R/W)
const NR_44: u16 = 0xff23; // sound mode 4 register, counter / consecutive (R/W)
const NR_50: u16 = 0xff24; // channel control / on-off / volume (R/W)
const NR_51: u16 = 0xff25; // selection of sound output terminal (R/W)
const NR_52: u16 = 0xff26; // sound on / off (R/W)
const WAVE_PATTERN_RAM: u16 = 0xff30; // waveform storage for arbitrary sound data
const WAVE_PATTERN_RAM_SIZE: usize = 0x10;
const LCDC: u16 = 0xff40; // LCD control (R/W)
const STAT: u16 = 0xff41; // LCDC status (R/W)
const SCY: u16 = 0xff42; // scroll Y (R/W)
const SCX: u16 = 0xff43; // scroll X (R/W)
const LY: u16 = 0xff44; // LCDC Y-coordinate (R)
const LYC: u16 = 0xff45; // LY compare (R/W)
const DMA: u16 = 0xff46; // DMA transfer and start address (W)
const BGP: u16 = 0xff47; // BG & window pallete data (W)
const ODP0: u16 = 0xff48; // object palette 0 data (R/W)
const ODP1: u16 = 0xff49; // object palette 1 data (R/W)
const WY: u16 = 0xff4a; // window Y position (R/W)
const WX: u16 = 0xff4b; // window X position (R/W)
const IE: u16 = 0xffff; // interrupt enable (R/W)
